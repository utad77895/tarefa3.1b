{"remainingRequest":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\MEIW_PAW\\MiniProj2\\src\\views\\questions\\ListQuestions.vue?vue&type=style&index=0&id=79993d7a&lang=css&","dependencies":[{"path":"C:\\MEIW_PAW\\MiniProj2\\src\\views\\questions\\ListQuestions.vue","mtime":1576832059000},{"path":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmdyZWVuIHsKICBjb2xvcjogZ3JlZW4KfQoKLnJlZCB7CiAgY29sb3I6IHJlZAp9Cg=="},{"version":3,"sources":["ListQuestions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqKA;AACA;AACA;;AAEA;AACA;AACA","file":"ListQuestions.vue","sourceRoot":"src/views/questions","sourcesContent":["<template>\n  <section class=\"page-section\">\n    <b-container>\n      <HeaderPage title=\"Gestão de Questões\"/>\n      <!--MENU DE TOPO-->\n      <b-row class=\"mb-4\">\n        <b-col cols=\"1\"></b-col>\n        <b-col>\n          <router-link\n            :to=\"{name:'addQuestion'}\"\n            tag=\"button\"\n            class=\"btn btn-outline-success mr-2 mt-2\"\n          ><i class=\"fas fa-plus-square\"></i> ADICIONAR QUESTÃO</router-link>\n          <router-link\n            :to=\"{name:'admin'}\"\n            tag=\"button\"\n            class=\"btn btn-outline-info mr-2 mt-2\"\n          ><i class=\"fas fa-bars\"></i> MENU PRINCIPAL</router-link>\n        </b-col>\n        <b-col cols=\"1\"></b-col>\n      </b-row>\n      \n      <!--TABLE-->\n      <b-row>\n        <b-col cols=\"1\"></b-col>\n        <b-col>\n          <table class=\"table table-striped\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">\n                  QUESTÃO\n                  <i class=\"fas fa-arrow-up\" v-if=\"sortType===1\" @click=\"sort()\"></i>\n                  <i class=\"fas fa-arrow-down\" v-else  @click=\"sort()\"></i>                \n                  </th>\n                <th scope=\"col\">NÍVEL</th>\n                <th scope=\"col\">AÇÕES</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"question of questions\" :key=\"question._id\">\n                <td  class=\"pt-4\">{{question.question}}</td>\n                <td class=\"pt-4\">{{question.level}}</td>\n                <td>\n                  <router-link\n                    :to=\"{name:'editQuestion', params:{questionId: question._id}}\"\n                    tag=\"button\"\n                    class=\"btn btn-outline-success mr-2\"\n                  ><i class=\"fas fa-edit\"></i> EDITAR</router-link>\n                  <button\n                    @click=\"viewQuestion(question._id)\"\n                    type=\"button\"\n                    class=\"btn btn-outline-warning mr-2\"\n                  ><i class=\"fas fa-search\"></i> VER</button>\n                  <button\n                    @click=\"removeQuestion(question._id)\"\n                    type=\"button\"\n                    class=\"btn btn-outline-danger mr-2\"\n                  ><i class=\"fas fa-trash-alt\"></i> REMOVER</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </b-col>\n          <b-col cols=\"1\"></b-col>\n      </b-row>\n    </b-container>\n  </section>\n</template>\n\n<script>\nimport {\n  FETCH_QUESTIONS,\n  REMOVE_QUESTION\n} from \"@/store/questions/question.constants\";\nimport HeaderPage from \"@/components/HeaderPage.vue\"\nimport { mapGetters } from \"vuex\";\n\n\nexport default {\n  name: \"ListQuestions\",\n   components: {\n    HeaderPage\n  },\n  data: function() {\n    return {\n      questions: [],\n      sortType: 1\n    };\n  },\n  computed: {\n    ...mapGetters(\"question\", [\"getQuestions\",\"getMessage\"])\n  },\n  methods: {\n    fetchQuestions() {\n      this.$store.dispatch(`question/${FETCH_QUESTIONS}`).then(\n        () => {\n          this.questions = this.getQuestions;\n        },\n        err => {\n          this.$alert(`${err.message}`, \"Erro\", \"error\");\n        });\n    },\n    sort() {\n      this.questions.sort(this.compareNames)\n      this.sortType *= -1      \n    },\n    compareNames(u1,u2) {\n      if(u1.question > u2.question) return 1 * this.sortType\n      else if(u1.question < u2.question) return -1 * this.sortType\n      else return 0\n    },\n    viewQuestion(id) {\n      const question = this.questions.find(question => question._id === id);\n      this.$fire({\n        title: question.question,\n        html: this.generateTemplate(question)\n        /* imageUrl: user.name,\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: \"Imagem desconhecida\" */\n      });\n    },\n    generateTemplate(question) {\n      let response = `\n          <p><b>Descrição:</b> ${question.description}</p>\n          <p><b>Tipo:</b> ${question.type}</p>\n          <p><b>Lista de respostas possíveis (correta a verde):</b></p>`          \n          for ( let i=0; i<question.answers.length;i++) {\n            if(question.answers[i].correct)\n            response += `<p class=\"green\"}>${i+1}. ${question.answers[i].title}</p>`\n            else\n            response += `<p class=\"red\"}>${i+1}. ${question.answers[i].title}</p>`\n              \n          }\n      return response;\n    },\n    removeQuestion(id) {\n      this.$confirm(\n        \"Se sim, clique em OK\",\n        \"Deseja mesmo remover a questão?\",\n        \"warning\",\n        { confirmButtonText: \"OK\", cancelButtonText: \"Cancelar\" }\n      ).then(\n        () => {\n          this.$store.dispatch(`question/${REMOVE_QUESTION}`, id).then(() => {\n            this.$alert(\n              this.getMessage,\n              \"Questão removida!\",\n              \"success\"\n            );\n            this.fetchQuestions();\n          });\n        },\n        () => {\n          this.$alert(\"Remoção cancelada!\", \"Informação\", \"info\");\n        }\n      );\n    }\n  },\n  created() {\n    this.fetchQuestions();\n  }\n};\n</script>\n<style>\n.green {\n  color: green\n}\n\n.red {\n  color: red\n}\n</style>"]}]}