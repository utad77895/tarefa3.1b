{"remainingRequest":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\babel-loader\\lib\\index.js!C:\\MEIW_PAW\\MiniProj2\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\MEIW_PAW\\MiniProj2\\src\\api\\quiz.service.js","dependencies":[{"path":"C:\\MEIW_PAW\\MiniProj2\\src\\api\\quiz.service.js","mtime":1576832059000},{"path":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxNRUlXX1BBV1xcTWluaVByb2oyXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgQVBJX1VSTCBmcm9tICIuL2NvbmZpZy5qcyI7CmV4cG9ydCB2YXIgcXVpelNlcnZpY2UgPSB7CiAgZ2V0UXVpenplczogZnVuY3Rpb24gKCkgewogICAgdmFyIF9nZXRRdWl6emVzID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRva2VuKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoQVBJX1VSTCwgIi9xdWl6emVzIiksIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIkdFVCIsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogdG9rZW4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0LnNlbnQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIHRocm93IEVycm9yKGhhbmRsZVJlc3BvbnNlcyhyZXNwb25zZS5zdGF0dXMpKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIGdldFF1aXp6ZXMoX3gpIHsKICAgICAgcmV0dXJuIF9nZXRRdWl6emVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGdldFF1aXp6ZXM7CiAgfSgpLAogIGFkZFF1aXo6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfYWRkUXVpeiA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIodG9rZW4sIHBheWxvYWQpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KEFQSV9VUkwsICIvcXVpenplcyIpLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiB0b2tlbgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHBheWxvYWQpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQyLnNlbnQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIHRocm93IEVycm9yKGhhbmRsZVJlc3BvbnNlcyhyZXNwb25zZS5zdGF0dXMpKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gYWRkUXVpeihfeDIsIF94MykgewogICAgICByZXR1cm4gX2FkZFF1aXouYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gYWRkUXVpejsKICB9KCksCiAgZWRpdFF1aXo6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfZWRpdFF1aXogPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgIC8qI19fUFVSRV9fKi8KICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKHRva2VuLCBwYXlsb2FkKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChBUElfVVJMLCAiL3F1aXp6ZXMvIikuY29uY2F0KHBheWxvYWQuX2lkKSwgewogICAgICAgICAgICAgICAgbWV0aG9kOiAiUFVUIiwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiB0b2tlbgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHBheWxvYWQpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQzLnNlbnQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIHRocm93IEVycm9yKGhhbmRsZVJlc3BvbnNlcyhyZXNwb25zZS5zdGF0dXMpKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gZWRpdFF1aXooX3g0LCBfeDUpIHsKICAgICAgcmV0dXJuIF9lZGl0UXVpei5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBlZGl0UXVpejsKICB9KCksCiAgcmVtb3ZlUXVpejogZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZW1vdmVRdWl6ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCh0b2tlbiwgaWQpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KEFQSV9VUkwsICIvcXVpenplcy8iKS5jb25jYXQoaWQpLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICJERUxFVEUiLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IHRva2VuCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQ0LnNlbnQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIHRocm93IEVycm9yKGhhbmRsZVJlc3BvbnNlcyhyZXNwb25zZS5zdGF0dXMpKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gcmVtb3ZlUXVpeihfeDYsIF94NykgewogICAgICByZXR1cm4gX3JlbW92ZVF1aXouYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gcmVtb3ZlUXVpejsKICB9KCkKfTsKCmZ1bmN0aW9uIGhhbmRsZVJlc3BvbnNlcyhjb2RlKSB7CiAgdmFyIG1lc3NhZ2UgPSAiIjsKCiAgc3dpdGNoIChjb2RlKSB7CiAgICBjYXNlIDQwMToKICAgICAgbWVzc2FnZSA9ICJOw6NvIGVzdMOhIGF1dG9yaXphZG8gYSBleGVjdXRhciBlc3RhIGHDp8OjbyEiOwogICAgICBicmVhazsKCiAgICBjYXNlIDQwOToKICAgICAgbWVzc2FnZSA9ICJKw6EgZXhpc3RlIHVtIHV0aWxpemFkb3IgY29tIGVzdGUgdXNlcm5hbWUhIjsKICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgbWVzc2FnZSA9ICJNZW5zYWdlbSBkZXNjb25oZWNpZGEiOwogICAgICBicmVhazsKICB9CgogIHJldHVybiBtZXNzYWdlOwp9CgpleHBvcnQgZGVmYXVsdCBxdWl6U2VydmljZTs="},{"version":3,"sources":["C:/MEIW_PAW/MiniProj2/src/api/quiz.service.js"],"names":["API_URL","quizService","getQuizzes","token","fetch","method","headers","response","ok","json","Error","handleResponses","status","addQuiz","payload","body","JSON","stringify","editQuiz","_id","removeQuiz","id","code","message"],"mappings":"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","sourcesContent":["import API_URL from './config.js'\n\nexport const quizService = {\n  async getQuizzes(token) {\n    const response = await fetch(`${API_URL}/quizzes`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n\n  async addQuiz(token, payload) {\n    const response = await fetch(`${API_URL}/quizzes`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify(payload)\n    })\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n\n  async editQuiz(token, payload) {\n    const response = await fetch(`${API_URL}/quizzes/${payload._id}`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify(payload)\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n\n  async removeQuiz(token, id) {\n    const response = await fetch(`${API_URL}/quizzes/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  }\n\n};\n\nfunction handleResponses(code) {\n  let message = \"\"\n  switch (code) {\n    case 401:\n      message = \"Não está autorizado a executar esta ação!\"\n      break;\n    case 409:\n      message = \"Já existe um utilizador com este username!\"\n      break;\n    default:\n      message = \"Mensagem desconhecida\"\n      break;\n  }\n  return message\n}\n\nexport default quizService;\n"]}]}