{"remainingRequest":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\babel-loader\\lib\\index.js!C:\\MEIW_PAW\\MiniProj2\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\MEIW_PAW\\MiniProj2\\src\\api\\auth.service.js","dependencies":[{"path":"C:\\MEIW_PAW\\MiniProj2\\src\\api\\auth.service.js","mtime":1576832059000},{"path":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\MEIW_PAW\\MiniProj2\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxNRUlXX1BBV1xcTWluaVByb2oyXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgQVBJX1VSTCBmcm9tICIuL2NvbmZpZy5qcyI7CmV4cG9ydCB2YXIgYXV0aFNlcnZpY2UgPSB7CiAgbG9naW46IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfbG9naW4gPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgIC8qI19fUFVSRV9fKi8KICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocGF5bG9hZCkgewogICAgICB2YXIgcmVzcG9uc2UsIGRhdGEsIHRva2VuLCBwcm9maWxlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChBUElfVVJMLCAiL2F1dGgiKSwgewogICAgICAgICAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04IgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHBheWxvYWQpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgdG9rZW4gPSByZXNwb25zZS5oZWFkZXJzLmdldCgiQXV0aG9yaXphdGlvbiIpOwogICAgICAgICAgICAgIHByb2ZpbGUgPSBkYXRhLmJvZHk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgewogICAgICAgICAgICAgICAgdG9rZW46IHRva2VuLAogICAgICAgICAgICAgICAgcHJvZmlsZTogcHJvZmlsZQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICB0aHJvdyBFcnJvcihoYW5kbGVSZXNwb25zZXMocmVzcG9uc2Uuc3RhdHVzKSk7CgogICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBsb2dpbihfeCkgewogICAgICByZXR1cm4gX2xvZ2luLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGxvZ2luOwogIH0oKSwKCiAgLyoqCiAgICogUmVnaXN0ZXJzIGEgbmV3IHVzZXIKICAgKiBAcGFyYW0ge2FzZCBhZHN9IHBheWxvYWQKICAgKi8KICByZWdpc3RlcjogZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZWdpc3RlciA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocGF5bG9hZCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoQVBJX1VSTCwgIi91c2VycyIpLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDIuc2VudCk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoaGFuZGxlUmVzcG9uc2VzKHJlc3BvbnNlLnN0YXR1cykpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiByZWdpc3RlcihfeDIpIHsKICAgICAgcmV0dXJuIF9yZWdpc3Rlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiByZWdpc3RlcjsKICB9KCksCiAgZ2V0SW5mbzogZnVuY3Rpb24gKCkgewogICAgdmFyIF9nZXRJbmZvID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyh0b2tlbikgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoQVBJX1VSTCwgIi9hdXRoIiksIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIkdFVCIsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IHRva2VuCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQzLnNlbnQpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIGdldEluZm8oX3gzKSB7CiAgICAgIHJldHVybiBfZ2V0SW5mby5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBnZXRJbmZvOwogIH0oKQp9OwoKZnVuY3Rpb24gaGFuZGxlUmVzcG9uc2VzKGNvZGUpIHsKICB2YXIgbWVzc2FnZSA9ICIiOwoKICBzd2l0Y2ggKGNvZGUpIHsKICAgIGNhc2UgNDAxOgogICAgICBtZXNzYWdlID0gIk7Do28gZXN0w6EgYXV0b3JpemFkbyBhIGV4ZWN1dGFyIGVzdGEgYcOnw6NvISI7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgNDAzOgogICAgICBtZXNzYWdlID0gIkRhZG9zIGRhcyBjcmVkZW5jaWFpcyBlcnJhZG9zISI7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgNDA2OgogICAgICBtZXNzYWdlID0gIkRhZG9zIGRvIHV0aWxpemFkb3IgasOhIGV4aXN0ZW50ZXMhIjsKICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgbWVzc2FnZSA9ICJNZW5zYWdlbSBkZXNjb25oZWNpZGEiOwogICAgICBicmVhazsKICB9CgogIHJldHVybiBtZXNzYWdlOwp9CgpleHBvcnQgZGVmYXVsdCBhdXRoU2VydmljZTs="},{"version":3,"sources":["C:/MEIW_PAW/MiniProj2/src/api/auth.service.js"],"names":["API_URL","authService","login","payload","fetch","method","headers","body","JSON","stringify","response","ok","json","data","token","get","profile","Error","handleResponses","status","register","getInfo","Authorization","code","message"],"mappings":";;;AAAA,OAAOA,OAAP;AAEA,OAAO,IAAMC,WAAW,GAAG;AACnBC,EAAAA,KADmB;AAAA;AAAA;AAAA,6CACbC,OADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEAC,KAAK,WAAIJ,OAAJ,YAAoB;AAC9CK,gBAAAA,MAAM,EAAE,MADsC;AAE9CC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAFqC;AAK9CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AALwC,eAApB,CAFL;;AAAA;AAEjBO,cAAAA,QAFiB;;AAAA,mBASnBA,QAAQ,CAACC,EATU;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUFD,QAAQ,CAACE,IAAT,EAVE;;AAAA;AAUfC,cAAAA,IAVe;AAWfC,cAAAA,KAXe,GAWPJ,QAAQ,CAACJ,OAAT,CAAiBS,GAAjB,CAAqB,eAArB,CAXO;AAYfC,cAAAA,OAZe,GAYLH,IAAI,CAACN,IAZA;AAAA,+CAad;AAAEO,gBAAAA,KAAK,EAALA,KAAF;AAASE,gBAAAA,OAAO,EAAPA;AAAT,eAbc;;AAAA;AAAA,oBAefC,KAAK,CAACC,eAAe,CAACR,QAAQ,CAACS,MAAV,CAAhB,CAfU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAkBzB;;;;AAIMC,EAAAA,QAtBmB;AAAA;AAAA;AAAA,8CAsBVjB,OAtBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAuBAC,KAAK,WAAIJ,OAAJ,aAAqB;AAC/CK,gBAAAA,MAAM,EAAE,MADuC;AAE/CC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAFsC;AAK/CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AALyC,eAArB,CAvBL;;AAAA;AAuBjBO,cAAAA,QAvBiB;;AAAA,mBA8BnBA,QAAQ,CAACC,EA9BU;AAAA;AAAA;AAAA;;AAAA;AAAA,qBA+BRD,QAAQ,CAACE,IAAT,EA/BQ;;AAAA;AAAA;;AAAA;AAAA,oBAiCfK,KAAK,CAACC,eAAe,CAACR,QAAQ,CAACS,MAAV,CAAhB,CAjCU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoCnBE,EAAAA,OApCmB;AAAA;AAAA;AAAA,8CAoCXP,KApCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAqCAV,KAAK,WAAIJ,OAAJ,YAAoB;AAC9CK,gBAAAA,MAAM,EAAE,KADsC;AAE9CC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEPgB,kBAAAA,aAAa,EAAER;AAFR;AAFqC,eAApB,CArCL;;AAAA;AAqCjBJ,cAAAA,QArCiB;AAAA;AAAA,qBA4CVA,QAAQ,CAACE,IAAT,EA5CU;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAApB;;AAgDP,SAASM,eAAT,CAAyBK,IAAzB,EAA+B;AAC7B,MAAIC,OAAO,GAAG,EAAd;;AACA,UAAQD,IAAR;AACE,SAAK,GAAL;AACEC,MAAAA,OAAO,GAAG,2CAAV;AACA;;AACF,SAAK,GAAL;AACEA,MAAAA,OAAO,GAAG,gCAAV;AACA;;AACF,SAAK,GAAL;AACEA,MAAAA,OAAO,GAAG,oCAAV;AACA;;AACF;AACEA,MAAAA,OAAO,GAAG,uBAAV;AACA;AAZJ;;AAcA,SAAOA,OAAP;AACD;;AAED,eAAevB,WAAf","sourcesContent":["import API_URL from \"./config.js\";\n\nexport const authService = {\n  async login(payload) {\n    const response = await fetch(`${API_URL}/auth`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(payload)\n    });\n    if (response.ok) {\n      const data = await response.json();\n      const token = response.headers.get(\"Authorization\");\n      const profile = data.body;\n      return { token, profile };\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n  /**\n   * Registers a new user\n   * @param {asd ads} payload\n   */\n  async register(payload) {\n    const response = await fetch(`${API_URL}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(payload)\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n  async getInfo(token) {\n    const response = await fetch(`${API_URL}/auth`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    });\n    return await response.json();\n  }\n};\n\nfunction handleResponses(code) {\n  let message = \"\";\n  switch (code) {\n    case 401:\n      message = \"Não está autorizado a executar esta ação!\";\n      break;\n    case 403:\n      message = \"Dados das credenciais errados!\";\n      break;\n    case 406:\n      message = \"Dados do utilizador já existentes!\";\n      break;\n    default:\n      message = \"Mensagem desconhecida\";\n      break;\n  }\n  return message;\n}\n\nexport default authService;\n"]}]}